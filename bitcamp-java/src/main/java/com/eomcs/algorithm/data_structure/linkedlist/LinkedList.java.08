package com.eomcs.util;

public class LinkedList {
  
  Node first;
  
  Node last;
  
  int size;
  
  public void add(Object value) {
    Node newNode = new Node();
    newNode.value = value;
    
    if (first == null) {
      last = first = newNode;
    } else {
      last.next = newNode;
      last = newNode;
    }
    
    this.size++;
  }
  
  public Object get(int index) {
    if (index < 0 || index >= size)
      return null;
    
    Node cursor = first;
    for (int i = 0; i < index; i++) {
      cursor = cursor.next;
    }
    
    return cursor.value;
  }
  
  public void add(int index, Object value) {
    if (index < 0 || index >= size)
      return;
    
    Node newNode = new Node();
    newNode.value = value;
    
    Node cursor = first;
    for (int i = 0; i < index - 1; i++) {//지정된 위치에 삽입하려면 삽입하려는 위치 바로 전까지 
      cursor = cursor.next;
    }
    
    if (index == 0) {
      newNode.next = first;
      first = newNode;
    } else {
      newNode.next = cursor.next;
      cursor.next = newNode;
    }
    
    this.size++;    //add했으니 size증가
  }
  public Object remove(int index) {
    
    if (index < 0 || index >= size) //인덱스 유효성검사
      return null;
    
    Node cursor = first;
    for (int i = 0; i < index - 1; i++) {//지정된 위치에 삽입하려면 삽입하려는 위치 바로 전까지 
      cursor = cursor.next;
    }
    Node deletedNode=null;
    if(index==0) {
      deletedNode = first;
      first=deletedNode.next;
    }else {
      deletedNode = cursor.next;
      cursor.next =deletedNode.next;
    }
      
      deletedNode.next=null;
     size--;
     
      return deletedNode.value;  //삭제된 노드의 값을 쓰기위한 리턴
    }
  
  public Object set(int index,Object value) {
    if (index < 0 || index >= size)
      return null;
    
    Node cursor = first;
    for (int i = 0; i < index; i++) {
      cursor = cursor.next;
    }
    
    Object oldValue =cursor.value;
    cursor.value = value;
    
    return oldValue;
  }
  
  static class Node {
    Object value;
    Node next;
  }
}  
 